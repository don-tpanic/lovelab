### Modules ###from __future__ import divisionimport mathimport randomimport numpy as npimport gc# Import datafrom get_data import retrievedataset=retrieve('data.csv')# Relative frequencies for groupscontrol=[0,0,0,0,0,0]up=[0,0,0,0,0,0]down=[0,0,0,0,0,0]subjects_control=[0,0,0,0,0,0]subjects_up=[0,0,0,0,0,0]subjects_down=[0,0,0,0,0,0]control_rel_explore=[]up_rel_explore=[]down_rel_explore=[]se_control=[0,0,0,0,0,0]se_up=[0,0,0,0,0,0]se_down=[0,0,0,0,0,0]for subject in dataset:    choices=subject[2:202]    condition=subject[1]    freq_explore=[0,0,0,0,0,0]    freq_exploit=[0,0,0,0,0,0]    rel_explore=[-99,-99,-99,-99,-99,-99]    sl=0    for c in choices:        if int(c)==0:            if sl<=5:                freq_exploit[sl]+=1            sl+=1        elif int(c)==1:            if sl<=5:                freq_explore[sl]+=1            sl=0    for i in range(0, len(rel_explore)):        try:            rel_explore[i]=freq_explore[i]/(freq_explore[i]+freq_exploit[i])        except:            rel_explore[i]=-99    if condition=="Control":        control_rel_explore.append(rel_explore)        for r in range(0, len(rel_explore)):            if rel_explore[r]!=-99:                subjects_control[r]+=1                control[r]+=rel_explore[r]    elif condition=="Up":        up_rel_explore.append(rel_explore)        for r in range(0, len(rel_explore)):            if rel_explore[r]!=-99:                subjects_up[r]+=1                up[r]+=rel_explore[r]    elif condition=="Down":        down_rel_explore.append(rel_explore)        for r in range(0, len(rel_explore)):            if rel_explore[r]!=-99:                subjects_down[r]+=1                down[r]+=rel_explore[r]for y in range(0, len(control)):    control[y]/=subjects_control[y]    up[y]/=subjects_up[y]    down[y]/=subjects_down[y]    control[y]="{:.3f}".format(control[y])    up[y]="{:.3f}".format(up[y])    down[y]="{:.3f}".format(down[y])for j in control_rel_explore:    for r in range(0, len(j)):        if j[r]!=-99:            se_control[r]+=(float(control[r])-j[r])**2for j in up_rel_explore:    for r in range(0, len(j)):        if j[r]!=-99:            se_up[r]+=(float(up[r])-j[r])**2for j in down_rel_explore:    for r in range(0, len(j)):        if j[r]!=-99:            se_down[r]+=(float(down[r])-j[r])**2for x in range(0, len(se_control)):    se_control[x]="{:.3f}".format(math.sqrt(se_control[x]/subjects_control[x])/math.sqrt(subjects_control[x]))    se_up[x]="{:.3f}".format(math.sqrt(se_up[x]/subjects_up[x])/math.sqrt(subjects_up[x]))    se_down[x]="{:.3f}".format(math.sqrt(se_down[x]/subjects_down[x])/math.sqrt(subjects_down[x]))print controlprint se_controlprint upprint se_upprint downprint se_down